{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Downloads\\\\gistapi-main(1)\\\\gistapi-main\\\\src\\\\components\\\\Forks.js\";\nimport React from \"react\";\nimport { Avatar, Image } from \"antd\";\nimport { BranchesOutlined } from \"@ant-design/icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Forks = data => {\n  const forks = data.forks.forks || [];\n  console.log(forks);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"forksBox\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Forks:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), forks && forks.length !== 0 ? forks.map((fork, i) => /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(BranchesOutlined, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 13\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: `https://gist.github.com/${fork.id}`,\n          target: \"_blank\",\n          rel: \"noreferrer\",\n          children: [/*#__PURE__*/_jsxDEV(Avatar, {\n            src: /*#__PURE__*/_jsxDEV(Image, {\n              src: fork.user.avatar_url\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 24\n            }, this),\n            style: {\n              margin: 5\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 17\n          }, this), fork.user.login]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 13\n      }, this)]\n    }, i, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No forks yet.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n_c = Forks;\nvar _c;\n$RefreshReg$(_c, \"Forks\");","map":{"version":3,"names":["React","Avatar","Image","BranchesOutlined","jsxDEV","_jsxDEV","Forks","data","forks","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","fork","i","href","id","target","rel","src","user","avatar_url","style","margin","login","_c","$RefreshReg$"],"sources":["C:/Users/hp/Downloads/gistapi-main(1)/gistapi-main/src/components/Forks.js"],"sourcesContent":["import React from \"react\";\r\nimport { Avatar, Image } from \"antd\";\r\nimport { BranchesOutlined } from \"@ant-design/icons\";\r\n\r\nexport const Forks = (data) => {\r\n  const forks = data.forks.forks || [];\r\n  console.log(forks);\r\n  return (\r\n    <div className=\"forksBox\">\r\n      <p>Forks:</p>\r\n      {forks && forks.length !== 0 ? (\r\n        forks.map((fork, i) => (\r\n          <ul key={i}>\r\n            <BranchesOutlined />{\" \"}\r\n            <li>\r\n              <a\r\n                href={`https://gist.github.com/${fork.id}`}\r\n                target=\"_blank\"\r\n                rel=\"noreferrer\"\r\n              >\r\n                <Avatar\r\n                  src={<Image src={fork.user.avatar_url} />}\r\n                  style={{ margin: 5 }}\r\n                />\r\n                {fork.user.login}\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        ))\r\n      ) : (\r\n        <p>No forks yet.</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,EAAEC,KAAK,QAAQ,MAAM;AACpC,SAASC,gBAAgB,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,OAAO,MAAMC,KAAK,GAAIC,IAAI,IAAK;EAC7B,MAAMC,KAAK,GAAGD,IAAI,CAACC,KAAK,CAACA,KAAK,IAAI,EAAE;EACpCC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EAClB,oBACEH,OAAA;IAAKM,SAAS,EAAC,UAAU;IAAAC,QAAA,gBACvBP,OAAA;MAAAO,QAAA,EAAG;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAI,EACZR,KAAK,IAAIA,KAAK,CAACS,MAAM,KAAK,CAAC,GAC1BT,KAAK,CAACU,GAAG,CAAC,CAACC,IAAI,EAAEC,CAAC,kBAChBf,OAAA;MAAAO,QAAA,gBACEP,OAAA,CAACF,gBAAgB;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,EAAC,GAAG,eACxBX,OAAA;QAAAO,QAAA,eACEP,OAAA;UACEgB,IAAI,EAAG,2BAA0BF,IAAI,CAACG,EAAG,EAAE;UAC3CC,MAAM,EAAC,QAAQ;UACfC,GAAG,EAAC,YAAY;UAAAZ,QAAA,gBAEhBP,OAAA,CAACJ,MAAM;YACLwB,GAAG,eAAEpB,OAAA,CAACH,KAAK;cAACuB,GAAG,EAAEN,IAAI,CAACO,IAAI,CAACC;YAAW;cAAAd,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAAI;YAC1CY,KAAK,EAAE;cAAEC,MAAM,EAAE;YAAE;UAAE;YAAAhB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QACrB,EACDG,IAAI,CAACO,IAAI,CAACI,KAAK;QAAA;UAAAjB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MACd;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACD;IAAA,GAdEI,CAAC;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAgBX,CAAC,gBAEFX,OAAA;MAAAO,QAAA,EAAG;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACjB;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACG;AAEV,CAAC;AAACe,EAAA,GA9BWzB,KAAK;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}